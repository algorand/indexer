// Package common provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/algorand/oapi-codegen DO NOT EDIT.
package common

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"github.com/labstack/echo/v4"
	"net/http"
	"strings"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Returns 200 if healthy.
	// (GET /health)
	MakeHealthCheck(ctx echo.Context) error
}

// ServerInterfaceWrapper converts echo contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler ServerInterface
}

// MakeHealthCheck converts echo context to params.
func (w *ServerInterfaceWrapper) MakeHealthCheck(ctx echo.Context) error {

	validQueryParams := map[string]bool{
		"pretty": true,
	}

	// Check for unknown query parameters.
	for name, _ := range ctx.QueryParams() {
		if _, ok := validQueryParams[name]; !ok {
			return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf("Unknown parameter detected: %s", name))
		}
	}

	var err error

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.MakeHealthCheck(ctx)
	return err
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}, si ServerInterface, m ...echo.MiddlewareFunc) {

	wrapper := ServerInterfaceWrapper{
		Handler: si,
	}

	router.GET("/health", wrapper.MakeHealthCheck, m...)

}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"XwxwnS8n7397//8DAAD//xq0YmXW2gAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
