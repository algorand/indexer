// Package common provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/algorand/oapi-codegen DO NOT EDIT.
package common

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"github.com/labstack/echo/v4"
	"net/http"
	"strings"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Returns 200 if healthy.
	// (GET /health)
	MakeHealthCheck(ctx echo.Context) error
}

// ServerInterfaceWrapper converts echo contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler ServerInterface
}

// MakeHealthCheck converts echo context to params.
func (w *ServerInterfaceWrapper) MakeHealthCheck(ctx echo.Context) error {

	validQueryParams := map[string]bool{
		"pretty": true,
	}

	// Check for unknown query parameters.
	for name, _ := range ctx.QueryParams() {
		if _, ok := validQueryParams[name]; !ok {
			return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf("Unknown parameter detected: %s", name))
		}
	}

	var err error

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.MakeHealthCheck(ctx)
	return err
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}, si ServerInterface, m ...echo.MiddlewareFunc) {

	wrapper := ServerInterfaceWrapper{
		Handler: si,
	}

	router.GET("/health", wrapper.MakeHealthCheck, m...)

}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AP//W9OaVkfdAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
