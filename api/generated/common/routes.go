// Package common provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/algorand/oapi-codegen DO NOT EDIT.
package common

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"github.com/labstack/echo/v4"
	"net/http"
	"strings"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Returns 200 if healthy.
	// (GET /health)
	MakeHealthCheck(ctx echo.Context) error
}

// ServerInterfaceWrapper converts echo contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler ServerInterface
}

// MakeHealthCheck converts echo context to params.
func (w *ServerInterfaceWrapper) MakeHealthCheck(ctx echo.Context) error {

	validQueryParams := map[string]bool{
		"pretty": true,
	}

	// Check for unknown query parameters.
	for name, _ := range ctx.QueryParams() {
		if _, ok := validQueryParams[name]; !ok {
			return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf("Unknown parameter detected: %s", name))
		}
	}

	var err error

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.MakeHealthCheck(ctx)
	return err
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}, si ServerInterface, m ...echo.MiddlewareFunc) {

	wrapper := ServerInterfaceWrapper{
		Handler: si,
	}

	router.GET("/health", wrapper.MakeHealthCheck, m...)

}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"fwAAAP//dZh144zcAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
