// Package common provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/algorand/oapi-codegen DO NOT EDIT.
package common

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"github.com/labstack/echo/v4"
	"net/http"
	"strings"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Returns 200 if healthy.
	// (GET /health)
	MakeHealthCheck(ctx echo.Context) error
}

// ServerInterfaceWrapper converts echo contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler ServerInterface
}

// MakeHealthCheck converts echo context to params.
func (w *ServerInterfaceWrapper) MakeHealthCheck(ctx echo.Context) error {

	validQueryParams := map[string]bool{
		"pretty": true,
	}

	// Check for unknown query parameters.
	for name, _ := range ctx.QueryParams() {
		if _, ok := validQueryParams[name]; !ok {
			return echo.NewHTTPError(http.StatusBadRequest, fmt.Sprintf("Unknown parameter detected: %s", name))
		}
	}

	var err error

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.MakeHealthCheck(ctx)
	return err
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}, si ServerInterface, m ...echo.MiddlewareFunc) {

	wrapper := ServerInterfaceWrapper{
		Handler: si,
	}

	router.GET("/health", wrapper.MakeHealthCheck, m...)

}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"pS7bJv7FANflevbxl4//PwAA//+9lp08K9wAAA==",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
