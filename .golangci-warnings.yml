version: "2"
run:
  tests: true
linters:
  default: none
  enable:
    - staticcheck
    - unused
  exclusions:
    generated: lax
    rules:
      # be more lenient with test code
      - linters:
          - staticcheck
          - unused
        path: _test\.go
      - linters:
          - unused
        path: (.+)\.go$
        text: 'field _struct is unused'
      # ignore govet false positive fixed in https://github.com/golang/go/issues/45043
      - path: (.+)\.go$
        text: 'sigchanyzer: misuse of unbuffered os.Signal channel as argument to signal.Notify'
      # ignore golint false positive fixed in https://github.com/golang/lint/pull/487
      - path: (.+)\.go$
        text: exported method (.*).Unwrap` should have comment or be unexported
      # ignore issues about the way we use _struct fields to define encoding settings
      # Enable some golangci-lint default exception rules:
      # "EXC0001 errcheck: Almost all programs ignore errors on these functions and in most cases it's ok"
      - path: (.+)\.go$
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
      # "EXC0005 staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore"
      - path: (.+)\.go$
        text: ineffective break statement. Did you mean to break out of the outer loop
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0
  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0
  # use these new lint checks on code since #935
  new-from-rev: 99ab66fdadcd77fef4048bb2aa86cae1f06c6e08
severity:
  default: warning
formatters:
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
