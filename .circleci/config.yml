version: 2.1

workflows:
  version: 2
  "circleci_build_and_test":
    jobs:
      - main

jobs:
  main:
    docker:
      - image: golang:1.14.7
    steps:
      - prep
      - run_tests
      - upload_coverage

commands:
  prep:
    description: prepare machine for next steps
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: |
          apt update
          apt -y install python3 python3-pip python3-setuptools python3-wheel libboost-all-dev
          go get -u golang.org/x/lint/golint
          pip3 install -r misc/requirements.txt
          # Install Docker
          apt -y remove docker docker-engine docker.io containerd runc
          apt -y install apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt update
          apt -y install docker-ce docker-ce-cli containerd.io
          if [ -n "$DOCKER_PASSWORD" ]; then echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin ; fi




  run_tests:
    steps:
      - run: |
          test -z `go fmt ./...`
          make lint
          make check
          make integration
          make test
          make fakepackage
          make e2e

  upload_coverage:
    description: Collect coverage reports and upload them
    steps:
      - run:
          name: Upload Coverage Reports
          no_output_timeout: 10m
          command: |
            scripts/travis/upload_coverage.sh || true
    